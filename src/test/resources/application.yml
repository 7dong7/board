spring:
  # 이건 test 환경과 애플리케이션 환경을 따로 두기 위해서 설정
  profiles:
    active: test

  # 데이터 베이스 설정
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/study?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: root
    password: 1234

  # JPA 설정
  jpa:
    hibernate: # 하이버네이트와 관련된  설정
      ddl-auto: create
              # create : 애플리케이션 로딩 시점에 테이블을 드랍하고 다시 만듬 (공부할 때 사용)
              # create-drop : 애플리케이션 로딩시에 테이블을 만들고 애플리케이션을 종료하면 테이블을 드랍함
              # update : 엔티티로 등록된 클래스와 매핑되는 테이블이 없으면 새로 생성하
              #           기존의 컬럼은 건들지 않고 새로 추가되는 컬럼의 변경사항만 변경
              #           언떤 필드가 int -> String 으로 변경되더라도 update 되지 않는다
              
    properties:
      hibernate:
        # show_sql : 내가 작성한 쿼리문을 볼 수 있음
        # show_sql: true
        # format_sql : 내가 작성한 쿼리를 예쁘게( 포맷팅 ) 볼 수 있음 - system.out으로 출력 됨 / 위의 show_sql 버림
        format_sql: true
        # use_sql_comments : 내가 날린 쿼리를 /* */ 주석을 상용해서 어떻게 작성되고 날렸는지 확인 가능
        use_sql_comments: true

# 로그 설정
logging.level:
  # org.hibernate.SQL: debug : 내가 작성한 쿼리르 볼 수 있음 - log 로 출력됨 위의 show_sql 이랑 비슷함
  org.hibernate.SQL: debug
  # org.hibernate.type: trace : 로그에서 보여주는 쿼리에서 (?)로 보이는 값을 확인할 수 있다. (안됨)
  org.hibernate.type: trace
